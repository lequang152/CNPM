/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CNPM.Form;

import CNPM.DonDatPhong;
import static CNPM.MyConnection.getConnection;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Admin
 */
public class dondatphongform extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public dondatphongform() {
        initComponents();
        hienThiDanhSachDatPhong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     public ArrayList<DonDatPhong> layDanhSachDatPhong() {
        ArrayList<DonDatPhong> dsdp = new ArrayList<DonDatPhong>();
        Connection con = getConnection();
        try {
            Statement st = (Statement) con.createStatement();
            String sql = "SELECT * FROM datphong";
            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            DonDatPhong dp;
            while (rs.next()) {
                dp = new DonDatPhong(rs.getInt("MADP"), rs.getString("NGAYDAT"), rs.getString("NGAYNHAN"), rs.getString("NGAYTRA"), rs.getString("TINHTRANG"), rs.getString("PTTT"), rs.getInt("MAKH"), rs.getInt("MAPHONG"));

                //Thêm vào danh sách
                dsdp.add(dp);
            }
        } catch (Exception ex) {
            showMessageDialog(this, "lỗi database");

        }
        return dsdp;
    }
     public void hienThiDanhSachDatPhong() {
        String colTieuDe1[] = new String[]{"Mã đặt phòng", "Ngày đặt", "Ngày nhận", "Ngày trả", "tình trạng", "PTTT", "mã kh","mã phòng"};
        ArrayList<DonDatPhong> dsdp = layDanhSachDatPhong();

        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);

        Object[] row;

        for (int i = 0; i < dsdp.size(); i++) {

            row = new Object[8];

            // GÁN GIÁ TRỊ
            row[0] = dsdp.get(i).getMADP();
            row[1] = dsdp.get(i).getNGAYDAT();
            row[2] = dsdp.get(i).getNGAYNHAN();
            row[3] = dsdp.get(i).getNGAYTRA();
            row[4] = dsdp.get(i).getTINHTRANG();
            row[5] = dsdp.get(i).getPTTT();
            row[6] = dsdp.get(i).getMAKH();
            row[7] = dsdp.get(i).getMAPHONG();

            model.addRow(row);
        }
        
        //    }catch(ArrayIndexOutOfBoundsException ex){

        dondatphong.setModel(model);

    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dondatphong = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        madp = new javax.swing.JTextField();
        them4 = new javax.swing.JButton();
        sua4 = new javax.swing.JButton();
        xoa4 = new javax.swing.JButton();
        thoat4 = new javax.swing.JButton();
        jButtonclear4 = new javax.swing.JButton();
        ngaydat = new com.toedter.calendar.JDateChooser();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        ngaynhan = new com.toedter.calendar.JDateChooser();
        jLabel39 = new javax.swing.JLabel();
        ngaytra = new com.toedter.calendar.JDateChooser();
        jLabel40 = new javax.swing.JLabel();
        makh = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        maphong = new javax.swing.JTextField();
        tinhtrang = new javax.swing.JComboBox<>();
        pttt = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));

        dondatphong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dondatphong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dondatphongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(dondatphong);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Đơn đặt phòng"));

        jLabel32.setText("Mã đặt phòng");

        jLabel35.setText("Ngày đặt");

        jLabel36.setText("Phương thức thanh toán");

        madp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                madpActionPerformed(evt);
            }
        });

        them4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNPM/Form/hinh/THEM.png"))); // NOI18N
        them4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them4ActionPerformed(evt);
            }
        });

        sua4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNPM/Form/hinh/SUA.png"))); // NOI18N
        sua4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sua4ActionPerformed(evt);
            }
        });

        xoa4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNPM/Form/hinh/delete.png"))); // NOI18N
        xoa4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoa4ActionPerformed(evt);
            }
        });

        thoat4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNPM/Form/hinh/THOAT.png"))); // NOI18N
        thoat4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoat4ActionPerformed(evt);
            }
        });

        jButtonclear4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNPM/Form/hinh/CLEAR.png"))); // NOI18N
        jButtonclear4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclear4ActionPerformed(evt);
            }
        });

        ngaydat.setDateFormatString("dd/MM/yyyy");

        jLabel37.setText("Tình trạng");
        jLabel37.setToolTipText("");

        jLabel38.setText("Ngày nhận");

        ngaynhan.setDateFormatString("dd/MM/yyyy");

        jLabel39.setText("Ngày trả ");

        ngaytra.setDateFormatString("dd/MM/yyyy");

        jLabel40.setText("Mã khách hàng");

        jLabel41.setText("Mã phòng");

        tinhtrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn", "Chưa nhận", "Đã nhận", "Đã trả" }));

        pttt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn", "Trả trước", "Trả sau" }));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(them4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sua4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonclear4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xoa4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thoat4))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tinhtrang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ngaytra, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel40)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(maphong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(makh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(pttt, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(98, 98, 98)
                        .addComponent(ngaynhan, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(madp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ngaydat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(madp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(ngaydat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(ngaynhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(ngaytra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tinhtrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(10, 10, 10)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(pttt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(makh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maphong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(thoat4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xoa4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonclear4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sua4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(them4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void madpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_madpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_madpActionPerformed

    private void them4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them4ActionPerformed
        // TODO add your handling code here:
            if(madp.getText().equals("") || makh.getText().equals("") ||maphong.getText().equals("") ||tinhtrang.getSelectedIndex() == 0 || ngaynhan.toString().equals("") || ngaytra.toString().equals("") || ngaydat.toString().equals("") || pttt.getSelectedIndex() == 0) {
            showMessageDialog(this, "Không có đủ thông tin");
            return;
        }

        Connection con = getConnection();
        try {
            // Tạo một đối tượng để thực hiện công việc
           Statement st = (Statement) con.createStatement();
            String query = "INSERT INTO hoadon(MADP, NGAYDAT, NGAYNHAN, NGAYTRA, TINHTRANG, PTTT, MAKH, MAPHONG) VALUES('" + madp.getText() + "','"
         + "', '" + new java.sql.Date(ngaydat.getDate().getTime())  + "', '" + new java.sql.Date(ngaynhan.getDate().getTime()) + "', '" + new java.sql.Date(ngaytra.getDate().getTime()) + "', '" + tinhtrang.getSelectedItem().toString() + "','" + pttt.getSelectedItem().toString()+ "','" + makh.getText()+ "','" + maphong.getText() + "')";
            st.execute(query);
            hienThiDanhSachDatPhong();

        } catch (Exception ex) {
            showMessageDialog(this, "thông tin không hợp lệ");
        }
    }//GEN-LAST:event_them4ActionPerformed

    private void sua4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sua4ActionPerformed
        // TODO add your handling code here:
        if (dondatphong.getSelectedRow()==-1) {
            if (dondatphong.getRowCount()==0) {
                // lblError.setText("Table is empty");
            }
            else{
                //  lblError.setText("You must select a Tennis Player");
            }
        }
        else{
            if(madp.getText().equals("") || makh.getText().equals("") ||maphong.getText().equals("") ||tinhtrang.getSelectedIndex() == 0 || ngaynhan.toString().equals("") || ngaytra.toString().equals("") || ngaydat.toString().equals("") || pttt.getSelectedIndex() == 0) {
                showMessageDialog(null, "Không có đủ thông tin");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) dondatphong.getModel();
            String old = model.getValueAt(dondatphong.getSelectedRow(), 0).toString();
            Connection con = getConnection();
            try {
                // Tạo một đối tượng để thực hiện công việc
                Statement st = (Statement) con.createStatement();
                String query = "UPDATE datphong SET MADP = "+ "'" +madp.getText()+ "'" +
                ", MAKH =" + "'" +makh.getText()+ "'" +
                ", MAPHONG =" + "'" +maphong.getText()+ "'" +
                ", TINHTRANG =" + "'" +tinhtrang.getSelectedItem().toString()+  "'" +
                ", PTTT =" + "'" +pttt.getSelectedItem().toString()+  "'" +      
                ", NGAYDAT = " + "'" +new java.sql.Date(ngaydat.getDate().getTime())+ "'" +
                ", NGAYNHAN = " + "'" +new java.sql.Date(ngaynhan.getDate().getTime())+ "'" +
                ", NGAYTRA = " + "'" +new java.sql.Date(ngaytra.getDate().getTime())+ "'" +
                " where MADP = " + "'" + old + "'" ;

                st.executeUpdate(query);
                hienThiDanhSachDatPhong();

            } catch (Exception ex) {

                showMessageDialog(this, "thông tin không hợp lệ");
            }

        }
    }//GEN-LAST:event_sua4ActionPerformed

    private void xoa4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoa4ActionPerformed
        // TODO add your handling code here:
        Connection con = getConnection();
        try {
            // Tạo một đối tượng để thực hiện công việc
            Statement st = (Statement) con.createStatement();
            String query = "DELETE FROM datphong WHERE MADP = '" + madp.getText() + "'";
            st.executeUpdate(query);
            hienThiDanhSachDatPhong();

        } catch (Exception ex) {

            showMessageDialog(this, "thông tin không hợp lệ");
        }
    }//GEN-LAST:event_xoa4ActionPerformed

    private void thoat4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoat4ActionPerformed
        // TODO add your handling code here:
        thoat4.setToolTipText("Click để thoát chương trình ");
        int selected = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát chương"
            + " trình không", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
        if (selected == JOptionPane.YES_NO_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_thoat4ActionPerformed

    private void jButtonclear4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclear4ActionPerformed
        // TODO add your handling code here:
        madp.setText("");
        ngaydat.setCalendar(null);
        ngaynhan.setCalendar(null);
        ngaytra.setCalendar(null);
        tinhtrang.setSelectedIndex(0);
        pttt.setSelectedIndex(0);
        makh.setText("");
        maphong.setText("");
    }//GEN-LAST:event_jButtonclear4ActionPerformed

    private void dondatphongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dondatphongMouseClicked
        // TODO add your handling code here:
        int i = dondatphong.getSelectedRow();
        TableModel model = dondatphong.getModel();
        madp.setText(model.getValueAt(i, 0).toString());
        ngaydat.setDate(Date.valueOf(model.getValueAt(i, 1).toString()));
        ngaynhan.setDate(Date.valueOf(model.getValueAt(i, 2).toString()));
        ngaytra.setDate(Date.valueOf(model.getValueAt(i, 3).toString()));
        tinhtrang.setSelectedItem(model.getValueAt(i, 4).toString());
        pttt.setSelectedItem(model.getValueAt(i, 5).toString());
        makh.setText(model.getValueAt(i, 6).toString());
        maphong.setText(model.getValueAt(i, 7).toString());
    }//GEN-LAST:event_dondatphongMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dondatphongform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dondatphongform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dondatphongform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dondatphongform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dondatphongform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dondatphong;
    private javax.swing.JButton jButtonclear4;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField madp;
    private javax.swing.JTextField makh;
    private javax.swing.JTextField maphong;
    private com.toedter.calendar.JDateChooser ngaydat;
    private com.toedter.calendar.JDateChooser ngaynhan;
    private com.toedter.calendar.JDateChooser ngaytra;
    private javax.swing.JComboBox<String> pttt;
    private javax.swing.JButton sua4;
    private javax.swing.JButton them4;
    private javax.swing.JButton thoat4;
    private javax.swing.JComboBox<String> tinhtrang;
    private javax.swing.JButton xoa4;
    // End of variables declaration//GEN-END:variables
}
